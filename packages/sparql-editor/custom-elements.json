{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "sparql-editor.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "sparql-editor",
          "declaration": {
            "name": "SparqlEditor",
            "module": "/src/SparqlEditor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/SparqlEditor.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A text editor custom element which highlights and parses SPARQL queries.\n\nIt uses [sparqljs](https://npm.im/sparqljs) to parse the query text.\n\n## Usage\n\nSimply add the element to a page. It is possible to provide common prefixes and a base IRI\nso that they don't have to be explicitly added in the SPARQL string\n\n```js\nimport '@rdfjs-elements/sparql-editor'\nimport { html } from 'lit'\n\nconst value = `CONSTRUCT { ?s ?p ?o }\nFROM <john-doe>\nWHERE {\n  <john-doe> a schema:Person ;\n  schema:name \"John Doe\" .\n}`\n\nconst template = html`<rdf-editor prefixes=\"schema\" baseIRI=\"http://example.com/\" .value=\"${value}\"></rdf-editor>`\n```",
          "name": "SparqlEditor",
          "members": [
            {
              "kind": "field",
              "name": "format"
            },
            {
              "kind": "field",
              "name": "query"
            },
            {
              "kind": "method",
              "name": "_parse"
            },
            {
              "kind": "method",
              "name": "_errorLine",
              "parameters": [
                {
                  "name": "error"
                }
              ]
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The raw contents of the code editor",
              "name": "value",
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "baseIRI",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Value of the `BASE` directive which will be injected to the query",
              "attribute": "base-iri"
            }
          ],
          "events": [
            {
              "name": "parsed",
              "type": {
                "text": "CustomEvent<{ value: string; query: object }>"
              },
              "description": "when the editor contents have changed and have been successfully parsed"
            },
            {
              "type": {
                "text": "CustomEvent"
              },
              "description": "when there as in an error in parsing the query",
              "name": "parsing-failed"
            }
          ],
          "attributes": [
            {
              "name": "base-iri",
              "type": {
                "text": "string"
              },
              "description": "Value of the `BASE` directive which will be injected to the query",
              "fieldName": "baseIRI"
            }
          ],
          "superclass": {
            "name": "Editor",
            "package": "@rdfjs-elements/editor-base"
          },
          "tagName": "sparql-editor",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SparqlEditor",
          "declaration": {
            "name": "SparqlEditor",
            "module": "src/SparqlEditor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "demo/index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/mode/sparql.js",
      "declarations": [],
      "exports": []
    }
  ]
}
