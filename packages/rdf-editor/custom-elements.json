{
  "version": "experimental",
  "tags": [
    {
      "name": "rdf-editor",
      "path": "./rdf-editor.js",
      "description": "An text editor custom element which parses and serializes RDF/JS Quads using a selected RDF format.",
      "attributes": [
        {
          "name": "readonly",
          "type": "boolean"
        },
        {
          "name": "format",
          "description": "Media type of the RDF serialization to use.\n\nCustom parsers and serializers must be added to `@rdf-esm/formats-common`",
          "type": "string"
        },
        {
          "name": "serialized",
          "description": "The string representation of the RDF graph.\n\nNote that this property is only used to set the initial value of the editor. For updates `quads` should be used",
          "type": "string"
        },
        {
          "name": "quads",
          "description": "Gets or set RDF/JS quads. Setting will parse them using the chosen `format` and set to the text editor",
          "type": "array"
        }
      ],
      "properties": [
        {
          "name": "readonly",
          "attribute": "readonly",
          "type": "boolean"
        },
        {
          "name": "format",
          "attribute": "format",
          "description": "Media type of the RDF serialization to use.\n\nCustom parsers and serializers must be added to `@rdf-esm/formats-common`",
          "type": "string"
        },
        {
          "name": "serialized",
          "attribute": "serialized",
          "description": "The string representation of the RDF graph.\n\nNote that this property is only used to set the initial value of the editor. For updates `quads` should be used",
          "type": "string"
        },
        {
          "name": "codeMirror",
          "description": "The underlying `<wc-codemirror>` element",
          "type": "Element | null"
        },
        {
          "name": "quads",
          "attribute": "quads",
          "description": "Gets or set RDF/JS quads. Setting will parse them using the chosen `format` and set to the text editor",
          "type": "array"
        },
        {
          "name": "ready",
          "type": "Promise<any>"
        }
      ],
      "events": [
        {
          "name": "quads-changed",
          "description": "when the editor contents have changed and have been successfully parsed"
        },
        {
          "name": "parsing-failed",
          "description": "when the editor contents have changed and but failed to parse. Check `detail.noParser` (boolean) or `detail.error` properties for the reason"
        }
      ]
    }
  ]
}